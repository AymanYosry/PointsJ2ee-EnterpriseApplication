package com.ewhale.points.web.filter;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * @author Paulo Zenida - Linkare TI
 */
@WebFilter(filterName = "SessionTimeoutFilter", urlPatterns = "*.jsf")
public class SessionTimeoutFilter implements Filter
{

	private String timeoutPage = "timeout.jsf";

	private String loginPage = "login.jsf";

	private String resources = "javax.faces.resource";

	@Override
	public void init(FilterConfig filterConfig) throws ServletException
	{
	}

	@SuppressWarnings("unused")
	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) throws IOException, ServletException
	{

		if ((request instanceof HttpServletRequest) && (response instanceof HttpServletResponse))
		{
			HttpServletRequest httpServletRequest = (HttpServletRequest) request;
			HttpServletResponse httpServletResponse = (HttpServletResponse) response;

			// is session expire control required for this request AND is session invalid?
			if (isSessionControlRequiredForThisResource(httpServletRequest) && isSessionInvalid(httpServletRequest))
			{
				final String redirectPage = httpServletRequest.getContextPath() + "/"
						+ (httpServletRequest.getParameter("logout") != null ? getLoginPage() : getTimeoutPage());

				if (isAJAXRequest(httpServletRequest))
				{
					System.out.println("-------------- ajax request");
//					StringBuilder sb = new StringBuilder();
//					sb.append("");
//					httpServletResponse.setHeader("Cache-Control", "no-cache");
//					httpServletResponse.setCharacterEncoding("UTF-8");
//					httpServletResponse.setContentType("text/xml");
//					PrintWriter pw = response.getWriter();
//					pw.println(sb.toString());
//					pw.flush();
//					return;
				}

//				httpServletResponse.sendRedirect(redirectPage);
//				return;
			}
		}
		filterChain.doFilter(request, response);
	}

	private boolean isAJAXRequest(HttpServletRequest request)
	{
		boolean check = false;
		String facesRequest = request.getHeader("Faces-Request");
		if (facesRequest != null && facesRequest.equals("partial/ajax"))
		{
			check = true;
		}
		return check;
	}

	/**
	 * session shouldn't be checked for some pages. For example: for timeout page..
	 * Since we're redirecting to timeout page from this filter, if we don't
	 * disable session control for it, filter will again redirect to it and this will be result
	 * with an infinite loop...
	 */
	private boolean isSessionControlRequiredForThisResource(HttpServletRequest httpServletRequest)
	{
		String requestPath = httpServletRequest.getRequestURI();
		return !requestPath.contains(getTimeoutPage()) && !requestPath.contains(getLoginPage()) && !requestPath.contains(resources);
	}

	private boolean isSessionInvalid(HttpServletRequest httpServletRequest)
	{
		return (httpServletRequest.getRequestedSessionId() != null) && !httpServletRequest.isRequestedSessionIdValid();
	}

	public String getTimeoutPage()
	{
		return timeoutPage;
	}

	public String getLoginPage()
	{
		return loginPage;
	}

	@Override
	public void destroy()
	{
	}
}
