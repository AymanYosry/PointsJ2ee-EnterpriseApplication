package com.ewhale.points.web.managedbean.systemadmin;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;

import com.ewhale.points.common.util.EntityConstants;
import com.ewhale.points.web.managedbean.main.FacesUtil;
import com.ewhale.points.web.managedbean.main.ProfileBean;
import com.ewhale.points.ws.main.proxy.ServiceClientUtil;
import com.ewhale.points.ws.system.proxy.SystemAdminServiceClient;

@SessionScoped
@ManagedBean
public class SysAdminUserBean extends ProfileBean
{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	SystemAdminServiceClient systemAdminServiceClient = ServiceClientUtil.getSystemAdminServiceClient(FacesUtil.getLoginToken(), false);

	@Override
	protected void handlePostConstruct()
	{
		setCanAdd(false);
		setCanUpdate(false);
	}

	public void activateStatus()
	{
		changeStatus(EntityConstants.Status.Fixed.activeStatus.ID);
		getUsersList();
		closeDialoge();
	}

	public void blockStatus()
	{
		changeStatus(EntityConstants.Status.Fixed.blockedStatus.ID);
		getUsersList();
		closeDialoge();
	}

	private void changeStatus(int statusId)
	{
		Map<String, Object> data = new HashMap<>();
		data.put(EntityConstants.ItemStatus.itemId, getProfileId());
		data.put(EntityConstants.ItemStatus.statusId, statusId);
		data.put(EntityConstants.ItemStatus.updateStatusEmpId, FacesUtil.getLoginId());
		systemAdminServiceClient.updateItemStatus(data);
		FacesUtil.growlInfoMessage("Success", "Status Has Been Changed successfully");
	}

	public void getUsersList()
	{
		Map<String, Object> data = new HashMap<>();
		List<Map<String, Object>> allUsersList = systemAdminServiceClient.getProfilesList(data);

		String[][] columnKeys = new String[][]
			{
					{ EntityConstants.Profile.firstName, null },
					{ EntityConstants.Profile.lastName, null },
					{ EntityConstants.Profile.mobile, null },
					{ EntityConstants.Profile.role, EntityConstants.Role.roleName },
					{ EntityConstants.Profile.status, EntityConstants.Status.statusName } };
		populateTable(allUsersList, columnKeys);
	}

	@Override
	protected void loadDetailsData(Map<String, Object> data)
	{
		Map<String, Object> userData = systemAdminServiceClient.profileDetails(data.get(EntityConstants.Profile.profileId) + "");
		fillDetailsData(userData);
	}

	public void deleteUser()
	{
		systemAdminServiceClient.deleteProfile(getProfileId() + "");
	}
}
